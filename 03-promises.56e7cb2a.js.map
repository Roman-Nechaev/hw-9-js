{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAE/BC,iBAAiB,UASzB,SAAsBC,GACpBA,EAAIC,iBACJ,IAAgCC,EAAAF,EAAIG,OAA5BC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OAErBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAkBXG,EAjBPF,EAiBkBG,EAjBPF,EAkBrBG,EAAaC,aAAY,WAf3B,IAAuBC,EAAUC,EACzBC,GADeF,EAgBnBG,GAAkB,EAhBWF,EAiBCV,EAhB1BW,EAAgBE,KAAKC,SAAW,GAE/B,IAAIC,SAAQ,SAACC,EAASC,GACjBC,YAAW,WACfP,EACFK,EAAQ,CAAEP,WAAUU,WAAAT,IAEpBO,EAAO,CAAER,WAAUU,WAAAT,G,GAEpBA,E,KAQAU,MAAK,SAAAC,G,IAAGZ,EAAQY,EAARZ,SAAUa,EAAUD,EAAVF,WACjB/B,EAAAmC,OAAOC,QAAQ,uBAAwCC,OAAfhB,EAAS,QAAiBgB,OAAXH,EAAW,OAEhEI,QAAMC,IAAI,uBAAwCF,OAAfhB,EAAS,QAAiBgB,OAAXH,EAAW,M,IAEhEM,OAAM,SAAAP,G,IAAGZ,EAAQY,EAARZ,SAAUoB,EAAUR,EAAVF,WAClB/B,EAAAmC,OAAOO,QAAQ,sBAAuCL,OAAfhB,EAAS,QAAiBgB,OAAXI,EAAW,OAE/DH,QAAMC,IAAI,sBAAqCF,OAAfhB,EAAS,QAAiBgB,OAAXI,EAAW,M,IAE5DjB,GAAkBN,IACpByB,cAAcxB,GACdK,EAAiB,GAGnBZ,GAAcK,C,GACbA,GApBL,IAAmBA,EAAWC,C,IA/B9B,IAAIF,EAAc,EACdJ,EAAa,EACbG,EAAY,EAEZI,EAAa,KACbK,EAAiB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n// let position = 0;\nlet amountValue = 0;\nlet firstDelay = 0;\nlet delayStep = 0;\nlet timerId = null;\nlet intervalId = null;\nlet repetitionRate = 0;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.target;\n\n  firstDelay = Number(delay.value);\n  delayStep = Number(step.value);\n  amountValue = Number(amount.value);\n  RunPromis(delayStep, amountValue);\n}\n\nfunction createPromise(position, firstDelay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, firstDelay });\n      } else {\n        reject({ position, firstDelay });\n      }\n    }, firstDelay);\n  });\n}\n\nfunction RunPromis(delayStep, amountValue) {\n  intervalId = setInterval(() => {\n    repetitionRate += 1;\n    createPromise(repetitionRate, firstDelay)\n      .then(({ position, firstDelay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${firstDelay}ms`);\n\n        console.log(`✅ Fulfilled promise ${position} in ${firstDelay}ms`);\n      })\n      .catch(({ position, firstDelay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${firstDelay}ms`);\n\n        console.log(`❌ Rejected promise ${position} in ${firstDelay}ms`);\n      });\n    if (repetitionRate >= amountValue) {\n      clearInterval(intervalId);\n      repetitionRate = 0;\n    }\n\n    firstDelay += delayStep;\n  }, delayStep);\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","_target","target","delay","step","amount","$ce04d3a99e08e73b$var$firstDelay","Number","value","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountValue","delayStep1","amountValue1","$ce04d3a99e08e73b$var$intervalId","setInterval","position","firstDelay1","shouldResolve","$ce04d3a99e08e73b$var$repetitionRate","Math","random","Promise","resolve","reject","setTimeout","firstDelay","then","param","firstDelay2","Notify","success","concat","console","log","catch","firstDelay3","failure","clearInterval"],"version":3,"file":"03-promises.56e7cb2a.js.map"}