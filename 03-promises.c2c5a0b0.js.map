{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAE/BC,iBAAiB,UASzB,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAIK,OAEpCC,EAAaC,OAAOL,EAAMM,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAkBXG,EAjBPF,EAiBkBG,EAjBPF,EAkBrBG,EAAaC,aAAY,KACvBC,GAAkB,EAhBtB,SAAuBC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,EAAUC,YAAW,KACfP,EACFI,EAAQ,C,SAAEN,EAAUU,WAAAT,IAEpBM,EAAO,C,SAAEP,EAAUU,WAAAT,GAAa,GAEjCA,EAAW,G,CAOdU,CAAcZ,EAAgBT,GAC3BsB,MAAK,EAACZ,SAAEA,EAAUU,WAAAG,MACjBlC,EAAAmC,OAAOC,QAAQ,uBAAqBf,QAAiBa,OAEnDG,QAAMC,IAAI,uBAAqBjB,QAAiBa,MAAe,IAElEK,OAAM,EAAClB,SAAEA,EAAUU,WAAAS,MAClBxC,EAAAmC,OAAOM,QAAQ,sBAAoBpB,QAAiBmB,OAElDH,QAAMC,IAAI,sBAAoBjB,QAAemB,MAAe,IAE9DpB,GAAkBH,IACpByB,cAAcxB,GACdE,EAAiB,GAGnBT,GAAcK,CAAS,GACtBA,GApBL,IAAmBA,EAAWC,C,IA/B9B,IAAIF,EAAc,EACdJ,EAAa,EACbG,EAAY,EACZe,EAAU,KACVX,EAAa,KACbE,EAAiB","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', onFormSubmit);\n// let position = 0;\nlet amountValue = 0;\nlet firstDelay = 0;\nlet delayStep = 0;\nlet timerId = null;\nlet intervalId = null;\nlet repetitionRate = 0;\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.target;\n\n  firstDelay = Number(delay.value);\n  delayStep = Number(step.value);\n  amountValue = Number(amount.value);\n  RunPromis(delayStep, amountValue);\n}\n\nfunction createPromise(position, firstDelay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, firstDelay });\n      } else {\n        reject({ position, firstDelay });\n      }\n    }, firstDelay);\n  });\n}\n\nfunction RunPromis(delayStep, amountValue) {\n  intervalId = setInterval(() => {\n    repetitionRate += 1;\n    createPromise(repetitionRate, firstDelay)\n      .then(({ position, firstDelay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${firstDelay}ms`);\n\n        console.log(`✅ Fulfilled promise ${position} in ${firstDelay}ms`);\n      })\n      .catch(({ position, firstDelay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${firstDelay}ms`);\n\n        console.log(`❌ Rejected promise ${position} in ${firstDelay}ms`);\n      });\n    if (repetitionRate >= amountValue) {\n      clearInterval(intervalId);\n      repetitionRate = 0;\n    }\n\n    firstDelay += delayStep;\n  }, delayStep);\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","delay","step","amount","target","$47d4ff9957288465$var$firstDelay","Number","value","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountValue","delayStep1","amountValue1","$47d4ff9957288465$var$intervalId","setInterval","$47d4ff9957288465$var$repetitionRate","position","firstDelay1","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$timerId","setTimeout","firstDelay","$47d4ff9957288465$var$createPromise","then","firstDelay2","Notify","success","console","log","catch","firstDelay3","failure","clearInterval"],"version":3,"file":"03-promises.c2c5a0b0.js.map"}